import { LitElement, PropertyValueMap } from 'lit';
import { InfiniteQueryController } from '../controllers/infinite-query-controller';
import { WeavyContextProps } from '../types/weavy.types';
import { ShadowPartsController } from '../controllers/shadow-parts-controller';
import { NotificationTypes, NotificationsResultType } from '../types/notifications.types';
declare const WyNotificationList_base: import('../types/generic.types').Constructor<import('../mixins/block-mixin').BlockContextProviderProps & import('../mixins/block-mixin').BlockContextProps> & typeof LitElement;
export default class WyNotificationList extends WyNotificationList_base {
    #private;
    static styles: import('lit').CSSResult[];
    protected exportParts: ShadowPartsController;
    notificationId?: number;
    typeFilter: NotificationTypes;
    markAllRead(): Promise<void>;
    private handleMark;
    private handleSelect;
    notificationsQuery: InfiniteQueryController<NotificationsResultType>;
    private markNotificationsMutation?;
    private markNotificationMutation?;
    private infiniteScroll;
    private pagerRef;
    private handleRefresh;
    private handlePresenceChange;
    protected willUpdate(changedProperties: PropertyValueMap<this & WeavyContextProps>): Promise<void>;
    protected update(changedProperties: PropertyValueMap<this>): void;
    private renderNotifications;
    render(): import('lit-html').TemplateResult<1>;
    disconnectedCallback(): void;
}
export {};
//# sourceMappingURL=wy-notification-list.d.ts.map