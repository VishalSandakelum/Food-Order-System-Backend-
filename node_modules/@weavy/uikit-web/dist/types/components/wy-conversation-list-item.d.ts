import { LitElement, PropertyValueMap } from 'lit';
import { MessageType } from '../types/messages.types';
import { UserType } from '../types/users.types';
import { MembersResultType } from '../types/members.types';
import { WeavyContextProps } from '../types/weavy.types';
import { ConversationTypeGuid } from '../types/conversations.types';
import { ShadowPartsController } from '../controllers/shadow-parts-controller';
export default class WyConversationListItem extends LitElement {
    #private;
    static styles: import('lit').CSSResult;
    protected exportParts: ShadowPartsController;
    private weavyContext?;
    conversationId: number;
    unread: boolean;
    avatarUrl?: string;
    hideAvatar: boolean;
    displayName: string;
    type: ConversationTypeGuid;
    selected: boolean;
    starred: boolean;
    pinned: boolean;
    members: MembersResultType;
    lastMessage?: MessageType;
    user: UserType | undefined;
    private deliveredConversationMutation?;
    private handleMessageCreated;
    private handleConversationUpdated;
    private handleConversationMarked;
    private dispatchRefetch;
    private dispatchSelected;
    private handleStar;
    private handlePin;
    private dispatchMarked;
    private handleLeaveConversation;
    private handleTrashConversation;
    willUpdate(changedProperties: PropertyValueMap<this & WeavyContextProps>): void;
    render(): import('lit-html').TemplateResult<1>;
    connectedCallback(): void;
    disconnectedCallback(): void;
}
//# sourceMappingURL=wy-conversation-list-item.d.ts.map