import { LitElement, PropertyValueMap } from 'lit';
import { ReactableType } from '../types/reactions.types';
import { MemberType } from '../types/members.types';
import { MeetingType } from '../types/meetings.types';
import { FileType } from '../types/files.types';
import { EmbedType } from '../types/embeds.types';
import { PollOptionType } from '../types/polls.types';
import { WeavyContextProps } from '../types/weavy.types';
import { ShadowPartsController } from '../controllers/shadow-parts-controller';
export default class WyCommentEdit extends LitElement {
    static styles: import('lit').CSSResult;
    protected exportParts: ShadowPartsController;
    private weavyContext?;
    parentId: number;
    commentId: number;
    temp: boolean;
    createdBy: MemberType;
    createdAt: string;
    modifiedAt: string | undefined;
    isSubscribed: boolean;
    isTrashed: boolean;
    text: string;
    attachments?: FileType[];
    pollOptions: PollOptionType[] | undefined;
    meeting?: MeetingType;
    embed?: EmbedType;
    reactions: ReactableType[];
    seenBy: MemberType[];
    private updateCommentMutation;
    private dispatchEdit;
    private handleSubmit;
    willUpdate(changedProperties: PropertyValueMap<this & WeavyContextProps>): Promise<void>;
    render(): import('lit-html').TemplateResult<1>;
}
//# sourceMappingURL=wy-comment-edit.d.ts.map