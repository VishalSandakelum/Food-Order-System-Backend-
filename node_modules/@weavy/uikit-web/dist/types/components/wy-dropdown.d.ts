import { LitElement, PropertyValues } from 'lit';
import { ShadowPartsController } from '../controllers/shadow-parts-controller';
import { iconNamesType } from '../utils/icons';
export default class WyDropdown extends LitElement {
    static styles: import('lit').CSSResult[];
    protected exportParts: ShadowPartsController;
    directionX: "left" | "right";
    directionY: "up" | "down";
    icon: iconNamesType;
    small: boolean;
    noWrapper: boolean;
    disabled: boolean;
    private _placement;
    show: boolean;
    private _slotButton;
    private computePositionCleanup?;
    private buttonRef;
    private menuRef;
    constructor();
    private _documentClickHandler;
    private handleClose;
    private handleClickToggle;
    protected willUpdate(changedProperties: PropertyValues<this>): void;
    render(): import('lit-html').TemplateResult<1>;
    protected firstUpdated(_changedProperties: PropertyValues<this>): void;
    disconnectedCallback(): void;
}
export declare class WyDropdownItem extends LitElement {
    static styles: import('lit').CSSResult[];
    protected exportParts: ShadowPartsController;
    active: boolean;
    render(): import('lit-html').TemplateResult<1>;
}
export declare class WyDropdownOption extends LitElement {
    static styles: import('lit').CSSResult[];
    protected exportParts: ShadowPartsController;
    active: boolean;
    selected: boolean;
    render(): import('lit-html').TemplateResult<1>;
}
export declare class WyDropdownDivider extends LitElement {
    static styles: import('lit').CSSResult[];
    protected exportParts: ShadowPartsController;
    render(): import('lit-html').TemplateResult<1>;
}
//# sourceMappingURL=wy-dropdown.d.ts.map