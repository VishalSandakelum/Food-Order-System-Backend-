import { LitElement, PropertyValueMap } from 'lit';
import { InfiniteQueryController } from '../controllers/infinite-query-controller';
import { CommentsResultType } from '../types/comments.types';
import { RealtimeCommentEventType, RealtimeReactionEventType } from '../types/realtime.types';
import { WeavyContextProps } from '../types/weavy.types';
import { ShadowPartsController } from '../controllers/shadow-parts-controller';
declare const WyCommentList_base: import('../types/generic.types').Constructor<import('../mixins/block-mixin').BlockContextProviderProps & import('../mixins/block-mixin').BlockContextProps> & typeof LitElement;
export default class WyCommentList extends WyCommentList_base {
    #private;
    static styles: import('lit').CSSResult;
    protected exportParts: ShadowPartsController;
    parentId: number;
    location: "posts" | "files" | "apps";
    commentsQuery: InfiniteQueryController<CommentsResultType>;
    private addCommentMutation;
    private removeCommentMutation?;
    private restoreCommentMutation?;
    private pollMutation?;
    private infiniteScroll;
    private pagerRef;
    willUpdate(changedProperties: PropertyValueMap<this & WeavyContextProps>): Promise<void>;
    protected update(changedProperties: PropertyValueMap<this>): void;
    handleRealtimeCommentCreated: (realtimeEvent: RealtimeCommentEventType) => void;
    handleRealtimeReactionAdded: (realtimeEvent: RealtimeReactionEventType) => void;
    handleRealtimeReactionDeleted: (realtimeEvent: RealtimeReactionEventType) => void;
    private handleSubmit;
    private renderComments;
    render(): import('lit-html').TemplateResult<1>;
    disconnectedCallback(): void;
}
export {};
//# sourceMappingURL=wy-comment-list.d.ts.map