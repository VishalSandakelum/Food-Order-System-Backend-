import { LitElement, PropertyValues, nothing } from 'lit';
import { FileOrderType, FileType, FileViewType } from '../types/files.types';
import { ShadowPartsController } from '../controllers/shadow-parts-controller';
declare const WyFilesList_base: import('../types/generic.types').Constructor<import('../mixins/block-mixin').BlockContextProviderProps & import('../mixins/block-mixin').BlockContextProps> & typeof LitElement;
export declare class WyFilesList extends WyFilesList_base {
    static styles: import('lit').CSSResult[];
    protected exportParts: ShadowPartsController;
    files?: FileType[];
    dataUpdatedAt?: number;
    order: FileOrderType;
    view: FileViewType;
    isRenamingId?: number;
    highlightId?: number;
    highlightComment: boolean;
    private highlightRef;
    dispatchFileOpen(fileId: number, tab?: "comments" | "versions"): boolean;
    dispatchOrder(order: FileOrderType): boolean;
    dispatchEditName(file: FileType): boolean;
    dispatchRename(file: FileType, name: string): boolean;
    dispatchTrash(file: FileType): boolean;
    dispatchRestore(file: FileType): boolean;
    dispatchDeleteForever(file: FileType): boolean;
    dispatchSubscribe(file: FileType, subscribe: boolean): boolean;
    constructor();
    protected willUpdate(changedProperties: PropertyValues<this>): void;
    render(): import('lit-html').TemplateResult<1> | typeof nothing;
    protected updated(changedProperties: PropertyValues<this>): void;
}
export {};
//# sourceMappingURL=wy-files-list.d.ts.map