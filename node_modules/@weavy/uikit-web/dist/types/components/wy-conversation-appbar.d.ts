import { LitElement, PropertyValues } from 'lit';
import { ConversationType } from '../types/conversations.types';
import { WeavyContextProps } from '../types/weavy.types';
import { ShadowPartsController } from '../controllers/shadow-parts-controller';
declare const WyConversationAppbar_base: import('../types/generic.types').Constructor<import('../mixins/block-mixin').BlockContextProviderProps & import('../mixins/block-mixin').BlockContextProps> & typeof LitElement;
export default class WyConversationAppbar extends WyConversationAppbar_base {
    #private;
    static styles: import('lit').CSSResult[];
    protected exportParts: ShadowPartsController;
    conversationId?: number;
    conversation?: ConversationType;
    showDetails: boolean;
    showAddMembers: boolean;
    conversationTitle: string;
    protected conversationTitleInput: string;
    /**
     * A keyboard-consuming element releases focus.
     * @event release-focus
     */
    private releaseFocusEvent;
    protected isBotChat(conversation?: ConversationType): boolean;
    protected isChatRoom(conversation?: ConversationType): boolean;
    protected isPrivateChat(conversation?: ConversationType): boolean;
    private membersQuery;
    private addMembersMutation?;
    private leaveConversationMutation?;
    private updateMemberMutation?;
    private updateConversationMutation?;
    private handleRealtimeAppUpdated;
    private addMembers;
    private handleSaveConversationName;
    private handleAvatarUploaded;
    private clearAvatar;
    private updateMember;
    private leaveConversation;
    protected willUpdate(changedProperties: PropertyValues<this & WeavyContextProps>): void;
    render(): import('lit-html').TemplateResult<1>;
    disconnectedCallback(): void;
}
export {};
//# sourceMappingURL=wy-conversation-appbar.d.ts.map