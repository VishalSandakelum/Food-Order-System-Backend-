import { LitElement, PropertyValues } from 'lit';
import { WeavyContext } from './client/weavy';
import { WeavyTokenFactory, WeavyOptions } from './types/weavy.types';
import { LocaleModule } from '@lit/localize';
import { Constructor } from './types/generic.types';
export declare class WyContext extends LitElement implements WeavyOptions {
    static styles: import('lit').CSSResult[];
    /**
     * Enables context provider mode.
     * This means only children elements of this element can use this context.
     * This is enabled automatically on initialization when any children elements are present.
     */
    provider: boolean;
    cloudFilePickerUrl?: string | URL;
    confluenceAuthenticationUrl?: string | URL;
    confluenceProductName?: string;
    disableEnvironmentImports?: boolean;
    locale?: string;
    locales?: Array<[string, LocaleModule | Promise<LocaleModule> | (() => Promise<LocaleModule>)]>;
    gcTime?: number;
    modalParent?: string;
    reactions?: string[];
    notificationEvents?: boolean;
    notificationToasts?: boolean;
    scrollBehavior?: "smooth" | "instant" | "auto";
    staleTime?: number;
    tokenFactory?: WeavyTokenFactory;
    tokenFactoryRetryDelay?: number;
    tokenFactoryTimeout?: number;
    tokenUrl?: string | URL;
    url?: string | URL;
    zoomAuthenticationUrl?: string | URL;
    protected weavyContext?: WeavyContext;
    /**
     * The semver version of the package.
     */
    get version(): string;
    /**
     * The Weavy source name; package name.
     */
    get sourceName(): string;
    constructor();
    protected willUpdate(changedProperties: PropertyValues<this>): void;
    protected render(): import('lit-html').TemplateResult<1>;
}
export type WyContextType = Constructor<WyContext>;
//# sourceMappingURL=wy-context.d.ts.map