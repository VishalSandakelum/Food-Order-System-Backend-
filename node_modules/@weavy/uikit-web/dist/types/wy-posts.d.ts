import { LitElement, PropertyValues } from 'lit';
import { InfiniteQueryController } from './controllers/infinite-query-controller';
import { AppType, ContextualTypes } from './types/app.types';
import { Constructor } from './types/generic.types';
import { PostsResultType } from './types/posts.types';
import { ProductTypes } from './types/product.types';
import { RealtimeCommentEventType, RealtimePostEventType, RealtimeReactionEventType } from './types/realtime.types';
import { WeavyContextProps } from './types/weavy.types';
declare const WyPosts_base: Constructor<import('./mixins/block-mixin').BlockProps & import('./mixins/block-mixin').BlockContextProviderProps & import('./mixins/block-mixin').BlockContextProps & import('./mixins/block-mixin').BlockSettingProps & import('./types/product.types').ProductFeatureProps> & typeof LitElement;
export declare class WyPosts extends WyPosts_base {
    #private;
    static styles: import('lit').CSSResult[];
    productType: ProductTypes;
    contextualType: ContextualTypes;
    protected postsQuery: InfiniteQueryController<PostsResultType>;
    private infiniteScroll;
    private pagerRef;
    private addPostMutation;
    private subscribePostMutation?;
    private removePostMutation?;
    private restorePostMutation?;
    private pollMutation?;
    constructor();
    private handleSubmit;
    handleRealtimePostCreated: (realtimeEvent: RealtimePostEventType) => void;
    handleRealtimeCommentCreated: (realtimeEvent: RealtimeCommentEventType) => void;
    handleRealtimeReactionAdded: (realtimeEvent: RealtimeReactionEventType) => void;
    handleRealtimeReactionDeleted: (realtimeEvent: RealtimeReactionEventType) => void;
    willUpdate(changedProperties: PropertyValues<this & WeavyContextProps & {
        app: AppType;
    }>): void;
    protected update(changedProperties: PropertyValues<this>): void;
    render(): import('lit-html').TemplateResult<1>;
    disconnectedCallback(): void;
}
export type WyPostsType = Constructor<WyPosts>;
export {};
//# sourceMappingURL=wy-posts.d.ts.map