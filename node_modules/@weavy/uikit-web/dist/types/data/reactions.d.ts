import { MutationObserver } from '@tanstack/query-core';
import { WeavyContextType } from '../client/weavy';
import { MemberType } from '../types/members.types';
export declare function addReactionMutation(weavyContext: WeavyContextType, appId: number | null, entityId: number | null, type: "messages" | "posts" | "comments", reaction: string, user: MemberType): MutationObserver<Response, Error, void, void>;
export declare function removeReactionMutation(weavyContext: WeavyContextType, appId: number | null, entityId: number | null, type: "messages" | "posts" | "comments", user: MemberType): MutationObserver<Response, Error, void, void>;
export declare function replaceReactionMutation(weavyContext: WeavyContextType, appId: number | null, entityId: number | null, type: "messages" | "posts" | "comments", reaction: string, user: MemberType): MutationObserver<Response, Error, void, void>;
export declare function getReactionListOptions(weavyContext: WeavyContextType, type: string, entityId: number): {
    queryKey: (string | number)[];
    enabled: boolean;
    queryFn: () => Promise<any>;
};
//# sourceMappingURL=reactions.d.ts.map