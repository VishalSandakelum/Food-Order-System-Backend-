import { MutationKey, MutationObserver } from '@tanstack/query-core';
import { WeavyContextType } from '../client/weavy';
import { FileMutationContextType, FileType } from '../types/files.types';
import { AppType } from '../types/app.types';
export type MutateFileNameVariables = {
    file: FileType;
    name: string;
};
export type RenameFileMutationType = MutationObserver<FileType, Error, MutateFileNameVariables, FileMutationContextType>;
export declare function getRenameFileMutationOptions(weavyContext: WeavyContextType, app: AppType): {
    mutationKey: MutationKey;
    mutationFn: ({ file, name }: MutateFileNameVariables) => Promise<FileType>;
    onMutate: (variables: MutateFileNameVariables) => FileMutationContextType;
    onSuccess: (data: FileType, variables: MutateFileNameVariables) => void;
    onError(error: Error, variables: MutateFileNameVariables): void;
};
export declare function getRenameFileMutation(weavyContext: WeavyContextType, app: AppType): RenameFileMutationType;
//# sourceMappingURL=file-rename.d.ts.map