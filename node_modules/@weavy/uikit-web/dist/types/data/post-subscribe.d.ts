import { MutationKey, MutationObserver } from '@tanstack/query-core';
import { WeavyContextType } from '../client/weavy';
import { AppType } from '../types/app.types';
import { PostMutationContextType, PostType } from '../types/posts.types';
export type MutatePostSubscribeVariables = {
    id: number;
    subscribe: boolean;
};
export type SubscribePostMutationType = MutationObserver<PostType, Error, MutatePostSubscribeVariables, PostMutationContextType>;
export declare function getSubscribePostMutationOptions(weavyContext: WeavyContextType, app: AppType): {
    mutationKey: MutationKey;
    mutationFn: ({ id, subscribe }: MutatePostSubscribeVariables) => Promise<any>;
    onMutate: (variables: MutatePostSubscribeVariables) => Promise<object>;
    onSuccess: (data: PostType, variables: MutatePostSubscribeVariables) => void;
    onError(): void;
};
export declare function getSubscribePostMutation(weavyContext: WeavyContextType, app: AppType): SubscribePostMutationType;
//# sourceMappingURL=post-subscribe.d.ts.map