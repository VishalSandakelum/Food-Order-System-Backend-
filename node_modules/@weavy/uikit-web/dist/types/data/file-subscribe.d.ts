import { MutationKey, MutationObserver } from '@tanstack/query-core';
import { WeavyContextType } from '../client/weavy';
import { FileMutationContextType, FileType } from '../types/files.types';
import { AppType } from '../types/app.types';
export type MutateFileSubscribeVariables = {
    file: FileType;
    subscribe: boolean;
};
export type SubscribeFileMutationType = MutationObserver<void, Error, MutateFileSubscribeVariables, FileMutationContextType>;
export declare function getSubscribeFileMutationOptions(weavyContext: WeavyContextType, app: AppType): {
    mutationKey: MutationKey;
    mutationFn: ({ file, subscribe }: MutateFileSubscribeVariables) => Promise<void>;
    onMutate: (variables: MutateFileSubscribeVariables) => Promise<FileMutationContextType>;
    onSuccess: (data: void, variables: MutateFileSubscribeVariables) => void;
    onError(error: Error, variables: MutateFileSubscribeVariables): void;
};
export declare function getSubscribeFileMutation(weavyContext: WeavyContextType, app: AppType): SubscribeFileMutationType;
//# sourceMappingURL=file-subscribe.d.ts.map