import { WeavyContextBase } from './weavy';
import { Constructor } from '../types/generic.types';
import { WyNotificationToasts } from '../wy-notification-toasts';
export interface WeavyNotificationsProps {
    /**
     * Enable notification toasts in the browser.
     */
    notificationToasts: boolean;
}
export declare const WeavyNotificationsMixin: <TBase extends Constructor<WeavyContextBase>>(Base: TBase) => {
    new (...args: any[]): {
        _notificationToastsComponent?: WyNotificationToasts;
        _notificationToasts: boolean;
        notificationToasts: boolean;
        _addNotificationToastsComponent(): void;
        _removeNotificationToastsComponent(): void;
        destroy(this: any & WeavyContextBase & import('./network').WeavyNetworkProps & import('./authentication').WeavyAuthenticationProps & import('./localization').WeavyLocalizationProps & import('./connection').WeavyConnectionProps & import('./query').WeavyQueryProps & import('./version').WeavyVersionProps & import('./fetch').WeavyFetchProps & import('./styles').WeavyStylesProps & import('./realtime').WeavyRealtimeProps): void;
        readonly weavySid: string;
        readonly weavyId: string;
        readonly host: HTMLElement;
        "__#12@#hostContextProvider"?: import('../utils/context-provider').WyContextProvider<typeof import('../contexts/weavy-context').weavyContextDefinition>;
        cloudFilePickerUrl: string | URL | undefined;
        confluenceAuthenticationUrl: string | URL | undefined;
        confluenceProductName: string | undefined;
        disableEnvironmentImports: boolean | undefined;
        gcTime: number | undefined;
        reactions: string[] | undefined;
        scrollBehavior: "smooth" | "instant" | "auto" | undefined;
        staleTime: number | undefined;
        tokenFactoryRetryDelay: number | undefined;
        tokenFactoryTimeout: number | undefined;
        "__#12@#resolveUrl"?: (url: URL) => void;
        "__#12@#whenUrl": Promise<unknown>;
        whenUrl(): Promise<void>;
        "__#12@#url"?: URL;
        url: string | URL | undefined;
        "__#12@#zoomAuthenticationUrl"?: string | URL;
        zoomAuthenticationUrl: string | URL | undefined;
        "__#12@#isDestroyed": boolean;
        readonly isDestroyed: boolean;
    };
} & TBase;
//# sourceMappingURL=notifications.d.ts.map