var f = Object.defineProperty;
var i = (e, o) => f(e, "name", { value: o, configurable: !0 });
import { getDefaultExportFromCjs as s, requireReactDom as p } from "../react.js";
function u(e, o) {
  for (var n = 0; n < o.length; n++) {
    const t = o[n];
    if (typeof t != "string" && !Array.isArray(t)) {
      for (const r in t)
        if (r !== "default" && !(r in e)) {
          const a = Object.getOwnPropertyDescriptor(t, r);
          a && Object.defineProperty(e, r, a.get ? a : {
            enumerable: !0,
            get: /* @__PURE__ */ i(() => t[r], "get")
          });
        }
    }
  }
  return Object.freeze(Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }));
}
i(u, "_mergeNamespaces");
var c = p();
const l = /* @__PURE__ */ s(c), m = /* @__PURE__ */ u({
  __proto__: null,
  default: l
}, [c]);
export {
  m as index
};
